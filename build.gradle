buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
   		//classpath "net.ltgt.gradle:gradle-apt-plugin:0.5"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
//apply plugin: 'net.ltgt.apt'

repositories {
    mavenCentral()
}


task genJaxb {
final def packageName = "com.demo.domain"
    ext.sourcesDir = "src/main/java"
    ext.schemaDir = "src/main/resources"

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
          
            xjc(destdir: sourcesDir, package: packageName) {
            schema(dir: schemaDir, includes: "TrackingService.wsdl")
                arg(value: "-wsdl")
                
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

task afterEclipseImport {
	//dependsOn "genJaxb"
}

configurations {
  //  jaxb
}

jar {
    baseName = 'gs-producing-web-service'
    version =  '0.1.0'

}

// tag::dependencies[]
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-ws")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile("wsdl4j:wsdl4j:1.6.1")
   // jaxb("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
   // compile(files(genJaxb.sourcesDir).builtBy(genJaxb))
    compile 'org.mapstruct:mapstruct-jdk8:1.0.0.Final'
   // apt 'org.mapstruct:mapstruct-processor:1.0.0.Final'
   compile group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.0.0.Final'
   
}